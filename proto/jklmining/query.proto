syntax = "proto3";
package jackaldao.canine.jklmining;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "jklmining/params.proto";
import "jklmining/save_requests.proto";
import "jklmining/miners.proto";
import "jklmining/mined.proto";
import "jklmining/miner_claims.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/jackal-dao/canine/x/jklmining/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/jackaldao/canine/jklmining/params";
  }
  // Queries a SaveRequests by index.
	rpc SaveRequests(QueryGetSaveRequestsRequest) returns (QueryGetSaveRequestsResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/save_requests/{index}";
	}

	// Queries a list of SaveRequests items.
	rpc SaveRequestsAll(QueryAllSaveRequestsRequest) returns (QueryAllSaveRequestsResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/save_requests";
	}

// Queries a Miners by index.
	rpc Miners(QueryGetMinersRequest) returns (QueryGetMinersResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/miners/{address}";
	}

	// Queries a list of Miners items.
	rpc MinersAll(QueryAllMinersRequest) returns (QueryAllMinersResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/miners";
	}

// Queries a Mined by id.
	rpc Mined(QueryGetMinedRequest) returns (QueryGetMinedResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/mined/{id}";
	}

	// Queries a list of Mined items.
	rpc MinedAll(QueryAllMinedRequest) returns (QueryAllMinedResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/mined";
	}

// Queries a list of CheckMinerIndex items.
	rpc CheckMinerIndex(QueryCheckMinerIndexRequest) returns (QueryCheckMinerIndexResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/check_miner_index";
	}

// Queries a list of GetMinerIndex items.
	rpc GetMinerIndex(QueryGetMinerIndexRequest) returns (QueryGetMinerIndexResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/get_miner_index/{index}";
	}

// Queries a list of GetMinerStart items.
	rpc GetMinerStart(QueryGetMinerStartRequest) returns (QueryGetMinerStartResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/get_miner_start";
	}

// Queries a MinerClaims by index.
	rpc MinerClaims(QueryGetMinerClaimsRequest) returns (QueryGetMinerClaimsResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/miner_claims/{hash}";
	}

	// Queries a list of MinerClaims items.
	rpc MinerClaimsAll(QueryAllMinerClaimsRequest) returns (QueryAllMinerClaimsResponse) {
		option (google.api.http).get = "/jackal-dao/canine/jklmining/miner_claims";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetSaveRequestsRequest {
	  string index = 1;

}

message QueryGetSaveRequestsResponse {
	SaveRequests saveRequests = 1 [(gogoproto.nullable) = false];
}

message QueryAllSaveRequestsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSaveRequestsResponse {
	repeated SaveRequests saveRequests = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetMinersRequest {
	  string address = 1;

}

message QueryGetMinersResponse {
	Miners miners = 1 [(gogoproto.nullable) = false];
}

message QueryAllMinersRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMinersResponse {
	repeated Miners miners = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetMinedRequest {
	uint64 id = 1;
}

message QueryGetMinedResponse {
	Mined Mined = 1 [(gogoproto.nullable) = false];
}

message QueryAllMinedRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMinedResponse {
	repeated Mined Mined = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCheckMinerIndexRequest {
}

message QueryCheckMinerIndexResponse {
}

message QueryGetMinerIndexRequest {
  string index = 1;
}

message QueryGetMinerIndexResponse {
}

message QueryGetMinerStartRequest {
}

message QueryGetMinerStartResponse {
  string index = 1;
}

message QueryGetMinerClaimsRequest {
	  string hash = 1;

}

message QueryGetMinerClaimsResponse {
	MinerClaims minerClaims = 1 [(gogoproto.nullable) = false];
}

message QueryAllMinerClaimsRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMinerClaimsResponse {
	repeated MinerClaims minerClaims = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
