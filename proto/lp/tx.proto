syntax = "proto3";
package jackaldao.canine.lp;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/jackal-dao/canine/x/lp/types";

// Msg defines the Msg service.
service Msg {
      rpc CreateLPool(MsgCreateLPool) returns (MsgCreateLPoolResponse);
  rpc DepositLPool(MsgDepositLPool) returns (MsgDepositLPoolResponse);
  rpc WithdrawLPool(MsgWithdrawLPool) returns (MsgWithdrawLPoolResponse);
  rpc Swap(MsgSwap) returns (MsgSwapResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateLPool {
  string creator = 1;
  // Creator needs to deposit coins to create pool.
  // Input format: 
  // "{amount0}{denomination},...,{amountN}{denominationN}"
  repeated cosmos.base.v1beta1.DecCoin coins = 2 [(gogoproto.nullable) = false];
  // AMM model id used to balance the pool.
  uint32 amm_Id = 3;
  // Swap fee charged to swap transaction (swap x swap_fee_multi).
  // Is converted to type sdk.Dec
  string swap_fee_multi = 4;
  // Liquidity pool token (LPToken) lock duration in seconds.
  // Liquidity provider's LPToken is locked when they contribute to a pool.
  // Penalty is applied when LPToken is burned before the lock duration is over.
  int64 min_lock_duration = 5;
  // Penalty multiplier applied to LPToken when provider wishes to burn LPToken
  // before lock duration is over (LPToken x penalty_multi) -> pool_tokens.
  // Is converted to type sdk.Dec
  string penalty_multi = 6;
}

message MsgCreateLPoolResponse {
  // Pool id
  string id = 1;
}

message MsgDepositLPool {
  string creator = 1;
  string poolName = 2;
  // Input format:
  //"{amount0}{denomination},...,{amountN}{denominationN}"
  repeated cosmos.base.v1beta1.DecCoin coins = 3 [(gogoproto.nullable) = false];
  // The contributor can choose lock duration 
  int64 lockDuration = 4;
}

message MsgDepositLPoolResponse {
  // Amount of shares given to pool contributor.
  uint64 shares = 1;
}

message MsgWithdrawLPool {
  string creator = 1;
  string poolName = 2;
  int64 shares = 3;
}

message MsgWithdrawLPoolResponse {
}

message MsgSwap {
  string creator = 1;
  string poolName = 2;
  cosmos.base.v1beta1.DecCoin coin = 3 [(gogoproto.nullable) = false];
}

message MsgSwapResponse {
}

// this line is used by starport scaffolding # proto/tx/message
