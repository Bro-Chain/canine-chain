name: Build

on:
  pull_request:
  push:
    branches: [ "master", "dev" ]

jobs:
  build:
      name: Build
      runs-on: ubuntu-latest
      steps:        
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.1 # The Go version to download (if necessary) and use.
      - name: Build CLI
        shell: bash
        run: |
          make build

  native-build-cli:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.18.2 # The Go version to download (if necessary) and use.
      - name: Build CLI
        shell: bash
        run: |
          wget "https://github.com/CosmWasm/wasmvm/releases/download/v1.1.1/libwasmvm_muslc.x86_64.a"
          sudo cp "libwasmvm_muslc.x86_64.a" "/lib/libwasmvm_muslc.a"
          BUILD_TAGS=muslc LINK_STATICALLY=true make build
          cp "build/canined" "canined-$RUNNER_OS"
      - uses: actions/upload-artifact@v3
        with:
          name: canined-${{runner.os}}
          path: canined-${{runner.os}}

  # MacOS-ARM64-CLI:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.19 # The Go version to download (if necessary) and use.
  #     - name: Install xgo
  #       run: |
  #         go install github.com/crazy-max/xgo@v0.17.0
  #         xgo || true # check installation
  #     - name: Build MacOS CLI
  #       shell: bash
  #       run: |
  #         make build_macos_arm64_cli
  #         cp "canined-macos-arm64" "canined-MacOS-arm64"
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: canined-MacOS-arm64
  #         path: canined-MacOS-arm64

  NightlyRelease:
    needs:
      [native-build-cli]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: canined-Linux
      - uses: actions/download-artifact@v3
        with:
          name: canined-macOS
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "nightly"
          name: "nightly"
          prerelease: ${{ steps.is_pre_release.outputs.IS_PRE_RELEASE }}
          files: |
            canined-macOS
            canined-Linux